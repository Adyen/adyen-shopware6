name: E2E Test
on: [pull_request]

jobs:
  e2e:
    name: Shopware 6 E2E
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Clone Code
        uses: actions/checkout@v2

      - name: Initiate Dockware
        run: |
          docker pull dockware/dev:latest
          docker run --rm -p 443:443 --name shopware6 --env PHP_VERSION=7.4 -d dockware/dev:latest
          sleep 30
          docker logs shopware6
          docker exec shopware6 bash -c "mysql -u root -proot shopware -e \"UPDATE sales_channel_domain SET url='https://local.shopware.shop' WHERE url NOT LIKE 'default.%';\""
          docker exec shopware6 bash -c "mysql -u root -proot shopware -e \"SELECT @RULE_ID := id FROM rule WHERE name = \"All customers\"; UPDATE shipping_method SET availability_rule_id = @RULE_ID;\""
          
          docker network create localnetwork
          docker network connect --alias local.shopware.shop localnetwork shopware6

      - name: Install/Configure Plugin
        run: |
          docker exec shopware6 bash -c 'composer require adyen/adyen-shopware6'
          docker exec shopware6 bash -c 'php bin/console plugin:refresh'
          docker exec shopware6 bash -c 'php bin/console plugin:install AdyenPaymentShopware6 --activate'
          docker exec shopware6 bash -c 'php bin/console cache:clear'
          docker exec shopware6 bash -c 'php bin/console system:config:set AdyenPaymentShopware6.config.apiKeyTest ${{secrets.ADYEN_API_KEY}}'
          docker exec shopware6 bash -c 'php bin/console system:config:set AdyenPaymentShopware6.config.merchantAccount ${{secrets.ADYEN_MERCHANT}}'
          docker exec shopware6 bash -c 'php bin/console system:config:set AdyenPaymentShopware6.config.clientKeyTest ${{secrets.ADYEN_CLIENT_KEY}}'
          docker exec shopware6 bash -c 'php bin/console adyen:payment-method:enable --all'

      - name: Run E2E Tests
        run: docker-compose -f .github/workflows/templates/docker-compose.playwright.yml run --rm playwright /e2e.sh
        env:
          INTEGRATION_TESTS_BRANCH: develop
          SHOPWARE_BASE_URL: ${{secrets.SHOPWARE_BASE_URL}}

      - name: Archive test result artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: html-report
          path: test-report
