(this.webpackJsonp=this.webpackJsonp||[]).push([["adyen-payment-shopware6"],{"EEQ/":function(e){e.exports=JSON.parse('{"adyen":{"configTestTitle":"Configuration test","configTestSuccess":"Configuration is successfully tested","configTestFail":"There\'s an issue in your configuration"}}')},FRES:function(e,s){e.exports='<template>\n    <sw-button-process\n            :disabled="isLoading"\n            :isLoading="isLoading"\n            :processSuccess="isSaveSuccessful"\n            @process-finish="saveFinish"\n            @click="check"\n    >Test Configuration</sw-button-process>\n</template>\n'},LoYZ:function(e,s,t){"use strict";t.r(s);t("OEky");var i=t("FRES"),n=t.n(i);const{Component:a,Mixin:c}=Shopware;a.register("adyen-config-check-button",{template:n.a,inject:["adyenConfigCheck"],mixins:[c.getByName("notification")],data:()=>({isLoading:!1,isSaveSuccessful:!1}),computed:{pluginConfig(){let e=this.$parent;for(;!e.hasOwnProperty("actualConfigData");)e=e.$parent;let s=e.currentSalesChannelId,t=e.actualConfigData;return Object.assign({},t.null,t[s])}},methods:{saveFinish(){this.isSaveSuccessful=!1},check(){this.isLoading=!0,this.adyenConfigCheck.check(this.pluginConfig).then(e=>{e.success?(this.isSaveSuccessful=!0,this.createNotificationSuccess({title:this.$tc("adyen.configTestTitle"),message:this.$tc("adyen.configTestSuccess")})):this.createNotificationError({title:this.$tc("adyen.configTestTitle"),message:this.$tc(e.message?e.message:"adyen.configTestFail")}),this.isLoading=!1})}}});var o=t("EEQ/");Shopware.Locale.extend("en-GB",o)},OEky:function(e,s){const t=Shopware.Classes.ApiService,{Application:i}=Shopware;class n extends t{constructor(e,s,t="adyen"){super(e,s,t)}check(e){const s=this.getBasicHeaders({});return this.httpClient.post(`_action/${this.getApiBasePath()}/verify`,e,{headers:s}).then(e=>t.handleResponse(e))}}i.addServiceProvider("adyenConfigCheck",e=>{const s=i.getContainer("init");return new n(s.httpClient,e.loginService)})}},[["LoYZ","runtime"]]]);